name: Build and Deploy to ECS

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  AWS_REGION:      ${{ secrets.AWS_REGION }}
  AWS_ACCOUNT_ID:  ${{ secrets.AWS_ACCOUNT_ID }}
  STATE_BUCKET:    ${{ secrets.STATE_BUCKET_NAME }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.8

      - name: Init Terraform (Infra - Phase 1)
        working-directory: environments/dev/phase1
        run: |
          terraform init -reconfigure \
            -backend-config="bucket=${{ env.STATE_BUCKET }}" \
            -backend-config="key=infra/terraform.tfstate" \
            -backend-config="region=${{ env.AWS_REGION }}"

      - name: Apply Terraform (Infra - Phase 1)
        working-directory: environments/dev/phase1
        run: terraform apply -auto-approve

      - name: Get ECR Repository URL from Terraform Output
        id: get_ecr
        working-directory: environments/dev/phase1
        run: |
          echo "Extracting ECR URL from Terraform output..."
          # Capture only the real ECR URL, discard any noise
          RAW=$(terraform output ecr_repository_url 2>&1)
          ECR_URL=$(echo "$RAW" | grep -Eo '([A-Za-z0-9\-]+\.dkr\.ecr\.[a-z0-9\-]+\.amazonaws\.com\/[A-Za-z0-9._\/-]+)' | head -n1)
          echo "ECR_REPO_URL=${ECR_URL}" >> "$GITHUB_ENV"
          echo "ecr_repo_url=${ECR_URL}" >> "$GITHUB_OUTPUT"

      - name: Login to ECR
        run: |
          # Debug print so you can see the exact registry URL
          echo ">> ECR_REPO_URL is: '${ECR_REPO_URL}'"
          aws ecr get-login-password --region "$AWS_REGION" | \
            docker login --username AWS --password-stdin "${ECR_REPO_URL}"

      - name: Build and Push Docker Image
        id: build_image
        run: |
          IMAGE_TAG=$(date +%s)
          IMAGE_URI="${ECR_REPO_URL}:$IMAGE_TAG"
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI

      - name: Init Terraform (ECS Service - Phase 2)
        working-directory: environments/dev/phase2
        run: |
          terraform init -reconfigure \
            -backend-config="bucket=${{ env.STATE_BUCKET }}" \
            -backend-config="key=ecs-service/terraform.tfstate" \
            -backend-config="region=${{ env.AWS_REGION }}"

      - name: Plan ECS Service Update
        working-directory: environments/dev/phase2
        run: terraform plan -out=tfplan -var="image_url=${{ env.IMAGE_URI }}"

      - name: Apply ECS Service Update
        working-directory: environments/dev/phase2
        run: terraform apply -auto-approve tfplan
